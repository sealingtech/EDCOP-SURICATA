apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: {{ template "suricata.fullname" . }}
  namespace: default
  labels:
    app: suricata
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: suricata
  template:
    metadata:
      name: {{ template "suricata.name" . }}
      labels:
        app: suricata
      annotations:
      {{ if .Values.suricataConfig.useHostNetworking }}
          networks: '[
          { "name": "{{  .Values.networks.overlay }}" },
        ]'
      {{ else }}
        {{ if .Values.suricataConfig.inline }}
          networks: '[
          { "name": "{{  .Values.networks.overlay }}" },
          { "name": "{{  .Values.networks.net1 }}" },
          { "name": "{{  .Values.networks.net2 }}" }
        ]'
        {{ else }}
          networks: '[
          { "name": "{{  .Values.networks.overlay }}" },
          { "name": "{{  .Values.networks.net1 }}" }
        ]'
        {{ end }}
      {{ end }}
    spec:
      {{ if.Values.suricataConfig.useHostNetworking }}hostNetwork: true{{ end }}
      initContainers:
      - name: verifynode
        image: {{ .Values.images.runner }}
        env:
        - name: STARTUP_SCRIPT
          value: |
            #!/bin/bash
            set -e
            sleep 10
            if [ ! -f /sys/class/net/net0/operstate ]; then
            echo "Network interface 'net0' not found, exiting..."
            exit 1
            fi
      containers:
      - name: suricata
        image: {{ .Values.images.suricata }}
        commnd: [ "/suricata-entrypoint.sh" ]
        stdin: true
        tty: true
        securityContext:
          privileged: true
          capabilities:
              add:
                - NET_ADMIN
                - SYS_NICE #Needed for CPU pinning
                - NET_RAW
        volumeMounts:
          - mountPath: /etc/suricata
            name: suricata-config
          - mountPath: /data/suricata
            name: suricata-logs
          - mountPath: /var/lib/suricata/rules
            name: suricata-rules-pvc
        resources:
          requests:
            cpu: "{{ .Values.suricataConfig.requests.cpu }}"
            memory: "{{ .Values.suricataConfig.requests.memory }}"
          limits:
            cpu: "{{ .Values.suricataConfig.limits.cpu }}"
            memory: "{{ .Values.suricataConfig.limits.memory }}"
      - name: redis
        image: {{ .Values.images.redis }}
        imagePullPolicy: Always
        ports:
        - name: cport-6379
          containerPort: 6379
        resources:
          requests:
            cpu: "{{ .Values.redisConfig.requests.cpu }}"
            memory: "{{ .Values.redisConfig.requests.memory }}"
          limits:
            cpu: "{{ .Values.redisConfig.limits.cpu }}"
            memory: "{{ .Values.redisConfig.limits.memory }}"
      {{- if eq .Values.deploymentOptions.deployment "standalone"  }}
      - name: logstash
        image: {{ .Values.images.logstash }}
        imagePullPolicy: Always
        ports:
        - name: cport-5044
          containerPort: 5044
        resources:
          requests:
            cpu: "{{ .Values.logstashConfig.requests.cpu }}"
            memory: "{{ .Values.logstashConfig.requests.memory }}"
          limits:
            cpu: "{{ .Values.logstashConfig.limits.cpu }}"
            memory: "{{ .Values.logstashConfig.limits.memory }}"
        volumeMounts:
          - mountPath: /usr/share/logstash/pipeline/
            name: logstash-suricata-pipeline
          - mountPath: /usr/share/logstash/config
            name: logstash-suricata-config
      {{- end }}

      volumes:
      - name: suricata-logs
        emptyDir: {}
      - name: suricata-config
        configMap:
          name: {{ template "suricata.fullname" . }}-config
      - name: suricata-rules-pvc
        persistentVolumeClaim:
          claimName: {{ template "suricata.fullname" . }}-rules-pvc
      {{- if eq .Values.deploymentOptions.deployment "standalone"  }}
      - name: logstash-suricata-config
        configMap:
          name: logstash-{{ template "suricata.fullname" . }}-config
      - name: logstash-suricata-pipeline
        configMap:
          name: logstash-{{ template "suricata.fullname" . }}-pipeline
      {{- end }}

      restartPolicy: Always
      dnsPolicy: ClusterFirst
      nodeSelector:
        {{ .Values.nodeSelector.label }} : "true"
